0it [00:00, ?it/s]299it [00:00, 7803.72it/s]
0it [00:00, ?it/s]45it [00:00, 8321.30it/s]model restored!
[0, 1]
cuda:0
optimizer restored!
current_batch restored!

0it [00:00, ?it/s]/home/norja159/miniconda3/envs/memsum/lib/python3.7/site-packages/torch/nn/modules/rnn.py:775: UserWarning: RNN module weights are not part of single contiguous chunk of memory. This means they need to be compacted at every call, possibly greatly increasing memory usage. To compact weights again call flatten_parameters(). (Triggered internally at /opt/conda/conda-bld/pytorch_1670525553989/work/aten/src/ATen/native/cudnn/RNN.cpp:968.)
  self.dropout, self.training, self.bidirectional, self.batch_first)
train.py:229: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  remaining_mask_np = np.ones_like( doc_mask_np ).astype( np.bool ) | doc_mask_np
train.py:230: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  extraction_mask_np = np.zeros_like( doc_mask_np ).astype( np.bool ) | doc_mask_np
1it [00:02,  2.10s/it]2it [00:02,  1.22s/it]3it [00:03,  1.08it/s]4it [00:04,  1.09it/s]5it [00:05,  1.12it/s]6it [00:05,  1.11it/s]7it [00:07,  1.01s/it]8it [00:07,  1.09it/s]9it [00:08,  1.10it/s]10it [00:09,  1.01it/s]11it [00:10,  1.20it/s]12it [00:11,  1.06it/s]13it [00:12,  1.03s/it]14it [00:13,  1.12it/s]15it [00:14,  1.19it/s]16it [00:15,  1.15it/s]17it [00:16,  1.03it/s]18it [00:17,  1.08it/s]19it [00:18,  1.09it/s]20it [00:18,  1.20it/s]21it [00:19,  1.22it/s]22it [00:20,  1.11it/s]23it [00:21,  1.18it/s]24it [00:21,  1.27it/s]25it [00:23,  1.05it/s]26it [00:24,  1.10it/s]27it [00:25,  1.03it/s]28it [00:26,  1.01s/it]29it [00:27,  1.00it/s]30it [00:28,  1.05s/it]31it [00:29,  1.06s/it]32it [00:30,  1.10s/it]33it [00:31,  1.00it/s]34it [00:32,  1.06s/it]35it [00:33,  1.13it/s]36it [00:34,  1.13it/s]37it [00:34,  1.28it/s]38it [00:35,  1.10it/s]39it [00:37,  1.08s/it]40it [00:38,  1.05s/it]41it [00:38,  1.17it/s]42it [00:39,  1.21it/s]43it [00:40,  1.16it/s]44it [00:41,  1.21it/s]45it [00:42,  1.07it/s]46it [00:43,  1.14it/s]47it [00:43,  1.13it/s]48it [00:45,  1.11s/it]49it [00:46,  1.05it/s]50it [00:47,  1.02s/it]51it [00:47,  1.09it/s]52it [00:49,  1.09s/it]53it [00:50,  1.03it/s]54it [00:51,  1.02it/s]55it [00:52,  1.02it/s]56it [00:52,  1.14it/s]57it [00:53,  1.16it/s]58it [00:54,  1.14it/s]59it [00:55,  1.21it/s]60it [00:56,  1.13it/s]61it [00:57,  1.13it/s]62it [00:58,  1.12it/s]63it [00:59,  1.07s/it]64it [01:00,  1.01it/s]65it [01:01,  1.02s/it]66it [01:02,  1.02s/it]67it [01:03,  1.04it/s]68it [01:04,  1.05s/it]69it [01:05,  1.10it/s]70it [01:05,  1.17it/s]71it [01:06,  1.23it/s]72it [01:08,  1.04s/it]73it [01:09,  1.05s/it]74it [01:09,  1.06it/s]75it [01:10,  1.19it/s]76it [01:11,  1.24it/s]77it [01:12,  1.24it/s]78it [01:13,  1.15it/s]79it [01:15,  1.36s/it]80it [01:16,  1.21s/it]81it [01:17,  1.18s/it]82it [01:18,  1.12s/it]83it [01:19,  1.01it/s]84it [01:20,  1.03it/s]85it [01:20,  1.13it/s]86it [01:21,  1.14it/s]87it [01:23,  1.14s/it]88it [01:24,  1.01it/s]89it [01:24,  1.09it/s]90it [01:25,  1.11it/s]91it [01:26,  1.18it/s]92it [01:27,  1.15it/s]93it [01:28,  1.08it/s]94it [01:28,  1.20it/s]95it [01:29,  1.12it/s]96it [01:30,  1.10it/s]97it [01:31,  1.09it/s]98it [01:32,  1.08it/s]99it [01:33,  1.01it/s][current_batch: 15000] loss: 1.603, learning rate: 0.000100
Starting validation ...
train.py:310: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  remaining_mask_np = np.ones_like( doc_mask ).astype( np.bool ) | doc_mask
train.py:311: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  extraction_mask_np = np.zeros_like( doc_mask ).astype( np.bool ) | doc_mask
100it [01:50,  5.57s/it]101it [01:51,  4.22s/it]102it [01:52,  3.19s/it]103it [01:53,  2.57s/it]104it [01:53,  2.02s/it]105it [01:54,  1.69s/it]106it [01:55,  1.46s/it]107it [01:56,  1.33s/it]108it [01:57,  1.11s/it]109it [01:58,  1.05s/it]110it [01:59,  1.03s/it]111it [02:00,  1.12s/it]112it [02:01,  1.06it/s]113it [02:02,  1.05s/it]114it [02:03,  1.04it/s]115it [02:03,  1.13it/s]116it [02:04,  1.07it/s]117it [02:05,  1.07it/s]118it [02:06,  1.14it/s]119it [02:07,  1.01it/s]120it [02:08,  1.11it/s]121it [02:09,  1.24it/s]122it [02:09,  1.41it/s]123it [02:11,  1.02it/s]124it [02:12,  1.02it/s]125it [02:13,  1.01it/s]126it [02:14,  1.09s/it]127it [02:15,  1.05s/it]128it [02:17,  1.30s/it]129it [02:18,  1.13s/it]130it [02:19,  1.20s/it]131it [02:20,  1.13s/it]132it [02:21,  1.07s/it]133it [02:22,  1.04s/it]134it [02:23,  1.01s/it]135it [02:24,  1.03s/it]136it [02:25,  1.07s/it]137it [02:26,  1.10it/s]138it [02:26,  1.15it/s]139it [02:27,  1.28it/s]140it [02:28,  1.13it/s]141it [02:29,  1.13it/s]142it [02:30,  1.25it/s]143it [02:30,  1.31it/s]144it [02:31,  1.17it/s]145it [02:33,  1.03s/it]146it [02:33,  1.09it/s]147it [02:34,  1.06it/s]148it [02:35,  1.14it/s]val: 0.4642, 0.1357, 0.4397
Starting validation ...
149it [02:51,  5.47s/it]149it [02:51,  1.15s/it]
val: 0.4646, 0.1356, 0.4402
224.74user 28.46system 2:54.75elapsed 144%CPU (0avgtext+0avgdata 4815712maxresident)k
1446056inputs+1550472outputs (17major+1738745minor)pagefaults 0swaps
